/*plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.zitadel'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'com.fasterxml.jackson.core:jackson-databind'

	implementation 'org.json:json:20240303'
	implementation 'com.squareup.okhttp3:okhttp:4.12.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'

	compileOnly 'org.projectlombok:lombok:1.18.30'
	annotationProcessor 'org.projectlombok:lombok:1.18.30'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.mariadb.jdbc:mariadb-java-client:3.3.3'
	implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'

}


tasks.named('test') {
	useJUnitPlatform()
}
*/



plugins {
 id 'java-library'
 id 'maven-publish'
}

group = 'com.zitadel'
version = '0.0.1-SNAPSHOT'

java {
 toolchain {
  languageVersion = JavaLanguageVersion.of(17)
 }
}

repositories {
 mavenCentral()
}

dependencies {
 implementation 'org.liquibase:liquibase-core:4.20.0'
 implementation platform("org.springframework.boot:spring-boot-dependencies:3.1.3")
 compileOnly 'org.projectlombok:lombok:1.18.30'
 annotationProcessor 'org.projectlombok:lombok:1.18.30'
 implementation 'org.json:json:20240303'
 implementation 'com.squareup.okhttp3:okhttp:4.12.0'
 implementation 'org.mariadb.jdbc:mariadb-java-client:3.3.2'
 api 'org.springframework.boot:spring-boot-starter-security'
 api 'org.springframework.boot:spring-boot-starter-web'
 api 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
 implementation 'org.springframework.boot:spring-boot-starter'
 implementation 'org.springframework.boot:spring-boot-starter-jdbc'
 testImplementation 'org.springframework.boot:spring-boot-starter-test'
 testImplementation 'org.springframework.security:spring-security-test'
 testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

publishing {
 publications {
  mavenJava(MavenPublication) {
   from components.java
   groupId = project.group
   artifactId = 'security-plugin'
   version = project.version
  }
 }
}

tasks.named('test') {
 useJUnitPlatform()
}





/// ./gradlew publishToMavenLocal